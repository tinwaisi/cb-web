{"version":3,"file":"browser.mjs","sources":["../src/matchPath.js","../src/matchRoute.js","../src/resolveRoute.js","../src/Router.js"],"sourcesContent":["/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright © 2015-present Konstantin Tarkus, Kriasoft LLC. All rights reserved.\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from 'path-to-regexp';\n\nconst cache = new Map();\n\nfunction decodeParam(val) {\n  if (!val) {\n    return val;\n  }\n\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    return val;\n  }\n}\n\nfunction matchPath(routePath, urlPath, end, parentParams) {\n  const key = `${routePath}|${end}`;\n  let regexp = cache.get(key);\n\n  if (!regexp) {\n    const keys = [];\n    regexp = { pattern: pathToRegexp(routePath, keys, { end }), keys };\n    cache.set(key, regexp);\n  }\n\n  const m = regexp.pattern.exec(urlPath);\n  if (!m) {\n    return null;\n  }\n\n  const path = m[0];\n  const params = Object.create(null);\n\n  if (parentParams) {\n    Object.assign(params, parentParams);\n  }\n\n  for (let i = 1; i < m.length; i += 1) {\n    params[regexp.keys[i - 1].name] = decodeParam(m[i]);\n  }\n\n  return { path: path === '' ? '/' : path, keys: regexp.keys.slice(), params };\n}\n\nexport default matchPath;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright © 2015-present Konstantin Tarkus, Kriasoft LLC. All rights reserved.\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport matchPath from './matchPath';\n\nfunction matchRoute(route, baseUrl, path, parentParams) {\n  let match;\n  let childMatches;\n  let childIndex = 0;\n\n  return {\n    next() {\n      if (!match) {\n        match = matchPath(route.path, path, !route.children, parentParams);\n\n        if (match) {\n          return {\n            done: false,\n            value: {\n              route,\n              baseUrl,\n              path: match.path,\n              keys: match.keys,\n              params: match.params,\n            },\n          };\n        }\n      }\n\n      if (match && route.children) {\n        while (childIndex < route.children.length) {\n          if (!childMatches) {\n            const newPath = path.substr(match.path.length);\n            const childRoute = route.children[childIndex];\n            childRoute.parent = route;\n\n            childMatches = matchRoute(\n              childRoute,\n              baseUrl + (match.path === '/' ? '' : match.path),\n              newPath.charAt(0) === '/' ? newPath : `/${newPath}`,\n              match.params,\n            );\n          }\n\n          const childMatch = childMatches.next();\n          if (!childMatch.done) {\n            return {\n              done: false,\n              value: childMatch.value,\n            };\n          }\n\n          childMatches = null;\n          childIndex += 1;\n        }\n      }\n\n      return { done: true, value: null };\n    },\n  };\n}\n\nexport default matchRoute;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright © 2015-present Konstantin Tarkus, Kriasoft LLC. All rights reserved.\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nfunction resolveRoute(context, params) {\n  if (typeof context.route.action === 'function') {\n    return context.route.action(context, params);\n  }\n\n  return null;\n}\n\nexport default resolveRoute;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright © 2015-present Konstantin Tarkus, Kriasoft LLC. All rights reserved.\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from 'path-to-regexp';\nimport matchPath from './matchPath';\nimport matchRoute from './matchRoute';\nimport resolveRoute from './resolveRoute';\n\nclass Router {\n  constructor(routes, options = {}) {\n    if (Object(routes) !== routes) {\n      throw new TypeError('Invalid routes');\n    }\n\n    this.baseUrl = options.baseUrl || '';\n    this.resolveRoute = options.resolveRoute || resolveRoute;\n    this.context = Object.assign({ router: this }, options.context);\n    this.root = Array.isArray(routes) ? { path: '/', children: routes, parent: null } : routes;\n    this.root.parent = null;\n  }\n\n  resolve(pathOrContext) {\n    const context = Object.assign({}, this.context,\n      typeof pathOrContext === 'string' ? { path: pathOrContext } : pathOrContext);\n    const match = matchRoute(this.root, this.baseUrl, context.path.substr(this.baseUrl.length));\n    const resolve = this.resolveRoute;\n    let matches;\n    let parent;\n\n    function next(resume) {\n      parent = matches ? matches.value.route.parent : null;\n      matches = match.next();\n\n      if (matches.done) {\n        return Promise.reject(Object.assign(\n          new Error('Page not found'),\n          { context, status: 404, statusCode: 404 },\n        ));\n      }\n\n      return Promise.resolve(resolve(\n        Object.assign({}, context, matches.value),\n        matches.value.params,\n      )).then((result) => {\n        if (result !== null && result !== undefined) {\n          return result;\n        }\n\n        if (resume || parent === matches.value.route.parent) {\n          return next(resume);\n        }\n\n        return result;\n      });\n    }\n\n    context.url = context.path;\n    context.next = next;\n\n    return next(true);\n  }\n}\n\nRouter.pathToRegexp = pathToRegexp;\nRouter.matchPath = matchPath;\nRouter.matchRoute = matchRoute;\nRouter.resolveRoute = resolveRoute;\n\nexport default Router;\n"],"names":["cache","Map","decodeParam","val","decodeURIComponent","err","matchPath","routePath","urlPath","end","parentParams","key","regexp","get","keys","pattern","pathToRegexp","set","m","exec","path","params","Object","create","assign","i","length","name","slice","matchRoute","route","baseUrl","match","childMatches","childIndex","children","newPath","substr","childRoute","parent","charAt","childMatch","next","done","value","resolveRoute","context","action","Router","routes","options","TypeError","router","root","Array","isArray","pathOrContext","resolve","matches","resume","Promise","reject","Error","status","statusCode","then","result","undefined","url"],"mappings":"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"}